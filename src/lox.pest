program = _{SOI ~ declaration* ~ EOI}

declaration =  {
    classDecl
  | funDecl
  | varDecl
  | statement
}

classDecl =  {"class" ~ IDENTIFIER ~ ("<" ~ IDENTIFIER)? ~ "{" ~ function* ~ "}" ~ ";"}
funDecl   =  {"fun" ~ function ~ ";"}
varDecl   =  {"var" ~ IDENTIFIER ~ ("=" ~ expression)? ~ ";"}

statement =  {
    forStmt
  | ifStmt
  | printStmt
  | returnStmt
  | whileStmt
  | block
  | exprStmt
}

exprStmt   =  {expression ~ ";"}
forStmt    =  {
    "for" ~ "(" ~ (varDecl|exprStmt|";") ~ expression? ~ ";" ~ expression? ~ ")" ~ statement
}
ifStmt     =  {
    "if" ~ "(" ~ expression ~ ")" ~ statement ~ ("else" ~ statement)?
}
printStmt  =  {"print" ~ expression ~ ";"}
returnStmt =  {"return" ~ expression? ~ ";"}
whileStmt  =  {"while" ~ "(" ~ expression ~ ")" ~ statement}
block      =  {"{" ~ declaration* ~ "}"}

expression =  {assignment}

assignment =  {
    (call ~ "=")* ~ logic_or
}

logic_or         =  {logic_and ~ ("or" ~ logic_and)*}
logic_and        =  {equality ~ ("and" ~ equality)*}
equality_op      =  {"!="|"=="}
equality         =  {comparison ~ (equality_op ~ comparison)*}
comparison_op    =  {">="|">"|"<="|"<"}
comparison       =  {term ~ (comparison_op ~ term)*}
term             =  {factor ~ (term_op ~ factor)*}
term_op          =  {"-"|"+"}
factor           =  {unary ~ (factor_op ~ unary)*}
factor_op        =  {"/"|"*"}
unary            =  {unary_op* ~ call}
unary_op         =  {"!"|"-"}
call             =  {primary ~ ("(" ~ arguments? ~ ")"|"." ~ IDENTIFIER)*}
primary          =  {
    primary_keywords
  | NUMBER
  | STRING
  | IDENTIFIER
  | "(" ~ expression ~ ")"
  | "super" ~ "." ~ IDENTIFIER
}
primary_keywords =  {
    "true"
  | "false"
  | "nil"
  | "this"
}
function         =  {IDENTIFIER ~ "(" ~ parameters? ~ ")" ~ block}
parameters       =  {IDENTIFIER ~ ("," ~ IDENTIFIER)*}
arguments        =  {expression ~ ("," ~ expression)*}
NUMBER           =  {DIGIT+ ~ ("." ~ DIGIT+)?}
STRING           =  {"\"" ~ (!("\"") ~ ANY) ~ "\""}
IDENTIFIER       =  {ALPHA ~ (ALPHA|DIGIT)*}
ALPHA            =  {'a' .. 'z'|'A' .. 'Z'|"_"}
DIGIT            =  {'0' .. '9'}

WHITESPACE = _{" "|"\t"|"\r"|"\n"}
COMMENT    = _{"//" ~ (!("\n") ~ ANY)*}

